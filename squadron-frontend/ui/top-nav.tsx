'use client';
import Link from 'next/link';
import * as React from 'react';
import TextField from '@mui/material/TextField';
import Autocomplete from '@mui/material/Autocomplete';
import Avatar from '@mui/material/Avatar';
import Button from '@mui/material/Button';
import Menu from '@mui/material/Menu';
import MenuItem from '@mui/material/MenuItem';
import Box from '@mui/material/Box';
import { Divider, IconButton, ListItemIcon, Tooltip, Typography } from '@mui/material';

export function TopNav() { 
    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);
  const open = Boolean(anchorEl);
  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {
    setAnchorEl(event.currentTarget);
  };
  const handleClose = () => {
    setAnchorEl(null);
  };

  return (
    
   <nav className="bg-white border-gray-200 dark:bg-gray-900 flex flex-row py-3 px-8">
        <div className="flex-1">
          <Autocomplete
            className='w-2/5'
        id="free-solo-demo"
        freeSolo
        options={jobs.map((option) => option.name)}
        renderInput={(params) => <TextField {...params} label="Serach jobs" />}
      />
      </div>
      
  <div className="flex-none gap-2 pl-5">

        
        

        
    <React.Fragment>
      <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>
        <Typography sx={{ minWidth: 50 }}><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3 7.8C3 6.11984 3 5.27976 3.32698 4.63803C3.6146 4.07354 4.07354 3.6146 4.63803 3.32698C5.27976 3 6.11984 3 7.8 3H16.2C17.8802 3 18.7202 3 19.362 3.32698C19.9265 3.6146 20.3854 4.07354 20.673 4.63803C21 5.27976 21 6.11984 21 7.8V13.2C21 14.8802 21 15.7202 20.673 16.362C20.3854 16.9265 19.9265 17.3854 19.362 17.673C18.7202 18 17.8802 18 16.2 18H9.68375C9.0597 18 8.74767 18 8.44921 18.0613C8.18443 18.1156 7.9282 18.2055 7.68749 18.3285C7.41617 18.4671 7.17252 18.662 6.68521 19.0518L4.29976 20.9602C3.88367 21.2931 3.67563 21.4595 3.50054 21.4597C3.34827 21.4599 3.20422 21.3906 3.10923 21.2716C3 21.1348 3 20.8684 3 20.3355V7.8Z" stroke="#384250" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></Typography>
        <Typography sx={{ minWidth: 50 }}><svg width="22" height="21" viewBox="0 0 22 21" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M10.2827 2.45307C10.5131 1.98613 10.6284 1.75266 10.7848 1.67807C10.9209 1.61317 11.0791 1.61317 11.2152 1.67807C11.3717 1.75266 11.4869 1.98613 11.7174 2.45307L13.9041 6.88304C13.9721 7.02089 14.0061 7.08982 14.0558 7.14333C14.0999 7.19071 14.1527 7.22911 14.2113 7.25638C14.2776 7.28718 14.3536 7.2983 14.5057 7.32053L19.397 8.03546C19.9121 8.11075 20.1696 8.14839 20.2888 8.27419C20.3925 8.38365 20.4412 8.53405 20.4215 8.68353C20.3988 8.85533 20.2124 9.03694 19.8395 9.40014L16.3014 12.8462C16.1912 12.9536 16.136 13.0073 16.1004 13.0712C16.0689 13.1278 16.0487 13.19 16.0409 13.2543C16.0321 13.3269 16.0451 13.4027 16.0711 13.5545L16.906 18.4219C16.994 18.9352 17.038 19.1919 16.9553 19.3443C16.8833 19.4768 16.7554 19.5697 16.6071 19.5972C16.4366 19.6288 16.2061 19.5076 15.7451 19.2652L11.3724 16.9656C11.2361 16.8939 11.168 16.8581 11.0962 16.844C11.0327 16.8316 10.9673 16.8316 10.9038 16.844C10.832 16.8581 10.7639 16.8939 10.6277 16.9656L6.25492 19.2652C5.79392 19.5076 5.56341 19.6288 5.39297 19.5972C5.24468 19.5697 5.11672 19.4768 5.04474 19.3443C4.962 19.1919 5.00603 18.9352 5.09407 18.4219L5.92889 13.5545C5.95491 13.4027 5.96793 13.3269 5.95912 13.2543C5.95132 13.19 5.93111 13.1278 5.89961 13.0712C5.86402 13.0073 5.80888 12.9536 5.69859 12.8462L2.16056 9.40014C1.78766 9.03694 1.60121 8.85533 1.57853 8.68353C1.55879 8.53405 1.60755 8.38365 1.71125 8.27419C1.83044 8.14839 2.08797 8.11075 2.60304 8.03546L7.49431 7.32053C7.64642 7.2983 7.72248 7.28718 7.78872 7.25638C7.84736 7.22911 7.90016 7.19071 7.94419 7.14333C7.99391 7.08982 8.02793 7.02089 8.09597 6.88304L10.2827 2.45307Z" stroke="#384250" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg></Typography>
                      <Typography sx={{ minWidth: 50 }}><svg width="20" height="22" viewBox="0 0 20 22" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.35395 20C8.05908 20.6224 8.98533 21 9.99977 21C11.0142 21 11.9405 20.6224 12.6456 20M15.9998 7C15.9998 5.4087 15.3676 3.88258 14.2424 2.75736C13.1172 1.63214 11.5911 1 9.99977 1C8.40848 1 6.88235 1.63214 5.75713 2.75736C4.63192 3.88258 3.99977 5.4087 3.99977 7C3.99977 10.0902 3.22024 12.206 2.34944 13.6054C1.6149 14.7859 1.24763 15.3761 1.2611 15.5408C1.27601 15.7231 1.31463 15.7926 1.46155 15.9016C1.59423 16 2.19237 16 3.38863 16H16.6109C17.8072 16 18.4053 16 18.538 15.9016C18.6849 15.7926 18.7235 15.7231 18.7384 15.5408C18.7519 15.3761 18.3846 14.7859 17.6501 13.6054C16.7793 12.206 15.9998 10.0902 15.9998 7Z" stroke="#384250" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></Typography>
        <Tooltip title="Account settings">
          <IconButton
            onClick={handleClick}
            size="small"
            sx={{ ml: 2 }}
            aria-controls={open ? 'account-menu' : undefined}
            aria-haspopup="true"
            aria-expanded={open ? 'true' : undefined}
          >
            <Avatar alt="Remy Sharp" src="https://avatars.githubusercontent.com/u/12592949?v=1" />
          </IconButton>
        </Tooltip>
      </Box>
      <Menu
        anchorEl={anchorEl}
        id="account-menu"
        open={open}
        onClose={handleClose}
        onClick={handleClose}
        PaperProps={{
          elevation: 0,
          sx: {
            overflow: 'visible',
            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',
            mt: 1.5,
            width: 180,
            '& .MuiAvatar-root': {
              width: 32,
              height: 32,
              ml: -0.5,
              mr: 1,
            },
            '&:before': {
              content: '""',
              display: 'block',
              position: 'absolute',
              top: 0,
              right: 14,
              width: 10,
              height: 10,
              bgcolor: 'background.paper',
              transform: 'translateY(-50%) rotate(45deg)',
              zIndex: 0,
            },
          },
        }}
        transformOrigin={{ horizontal: 'right', vertical: 'top' }}
        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}
      >
            <MenuItem onClick={handleClose}>
              <ListItemIcon><svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12.3332 13C12.3332 12.0696 12.3332 11.6044 12.2183 11.2259C11.9598 10.3736 11.2929 9.70669 10.4406 9.44816C10.0621 9.33333 9.59688 9.33333 8.6665 9.33333H5.33317C4.4028 9.33333 3.93761 9.33333 3.55908 9.44816C2.70681 9.70669 2.03986 10.3736 1.78133 11.2259C1.6665 11.6044 1.6665 12.0696 1.6665 13M9.99984 4C9.99984 5.65685 8.65669 7 6.99984 7C5.34298 7 3.99984 5.65685 3.99984 4C3.99984 2.34315 5.34298 1 6.99984 1C8.65669 1 9.99984 2.34315 9.99984 4Z" stroke="#384250" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg></ListItemIcon>
                View Profile</MenuItem>
        <MenuItem onClick={handleClose}>
          <ListItemIcon><svg width="14" height="16" viewBox="0 0 14 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.66674 1.3335L1.72904 8.45873C1.4965 8.73778 1.38023 8.8773 1.37846 8.99514C1.37691 9.09757 1.42256 9.19503 1.50224 9.25943C1.5939 9.3335 1.77552 9.3335 2.13876 9.3335H7.00007L6.3334 14.6668L12.2711 7.54159C12.5036 7.26255 12.6199 7.12302 12.6217 7.00519C12.6232 6.90275 12.5776 6.80529 12.4979 6.7409C12.4062 6.66683 12.2246 6.66683 11.8614 6.66683H7.00007L7.66674 1.3335Z" stroke="#384250" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg></ListItemIcon>My work</MenuItem>
            <Divider />
            <MenuItem onClick={handleClose}>
              <ListItemIcon><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.00016 10.0002C9.10473 10.0002 10.0002 9.10473 10.0002 8.00016C10.0002 6.89559 9.10473 6.00016 8.00016 6.00016C6.89559 6.00016 6.00016 6.89559 6.00016 8.00016C6.00016 9.10473 6.89559 10.0002 8.00016 10.0002Z" stroke="#384250" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M12.485 9.81835C12.4043 10.0011 12.3803 10.2039 12.4159 10.4005C12.4516 10.5971 12.5453 10.7785 12.685 10.9214L12.7214 10.9577C12.8341 11.0703 12.9235 11.204 12.9845 11.3511C13.0455 11.4983 13.0769 11.656 13.0769 11.8153C13.0769 11.9746 13.0455 12.1323 12.9845 12.2795C12.9235 12.4266 12.8341 12.5603 12.7214 12.6729C12.6088 12.7856 12.4751 12.875 12.328 12.936C12.1808 12.997 12.0231 13.0284 11.8638 13.0284C11.7045 13.0284 11.5468 12.997 11.3996 12.936C11.2525 12.875 11.1188 12.7856 11.0062 12.6729L10.9699 12.6365C10.827 12.4968 10.6456 12.4031 10.449 12.3674C10.2524 12.3318 10.0496 12.3559 9.86683 12.4365C9.68758 12.5134 9.5347 12.6409 9.42702 12.8035C9.31933 12.9661 9.26155 13.1567 9.26077 13.3517V13.4547C9.26077 13.7762 9.13306 14.0845 8.90575 14.3118C8.67843 14.5391 8.37012 14.6668 8.04865 14.6668C7.72717 14.6668 7.41887 14.5391 7.19155 14.3118C6.96423 14.0845 6.83653 13.7762 6.83653 13.4547V13.4002C6.83183 13.1996 6.7669 13.005 6.65017 12.8418C6.53344 12.6786 6.37031 12.5543 6.18198 12.485C5.99918 12.4043 5.79641 12.3803 5.59981 12.4159C5.4032 12.4516 5.22179 12.5453 5.07895 12.685L5.04259 12.7214C4.93001 12.8341 4.79633 12.9235 4.64918 12.9845C4.50203 13.0455 4.3443 13.0769 4.18501 13.0769C4.02572 13.0769 3.86799 13.0455 3.72084 12.9845C3.57369 12.9235 3.44001 12.8341 3.32744 12.7214C3.21474 12.6088 3.12533 12.4751 3.06433 12.328C3.00333 12.1808 2.97194 12.0231 2.97194 11.8638C2.97194 11.7045 3.00333 11.5468 3.06433 11.3996C3.12533 11.2525 3.21474 11.1188 3.32744 11.0062L3.3638 10.9699C3.50352 10.827 3.59725 10.6456 3.63289 10.449C3.66854 10.2524 3.64448 10.0496 3.5638 9.86683C3.48697 9.68758 3.35941 9.5347 3.19681 9.42702C3.03421 9.31933 2.84367 9.26155 2.64865 9.26077H2.54562C2.22414 9.26077 1.91584 9.13306 1.68852 8.90575C1.4612 8.67843 1.3335 8.37012 1.3335 8.04865C1.3335 7.72717 1.4612 7.41887 1.68852 7.19155C1.91584 6.96423 2.22414 6.83653 2.54562 6.83653H2.60016C2.80077 6.83183 2.99532 6.7669 3.15853 6.65017C3.32173 6.53344 3.44605 6.37031 3.51531 6.18198C3.59599 5.99918 3.62006 5.79641 3.58441 5.59981C3.54876 5.4032 3.45503 5.22179 3.31531 5.07895L3.27895 5.04259C3.16625 4.93001 3.07685 4.79633 3.01585 4.64918C2.95485 4.50203 2.92345 4.3443 2.92345 4.18501C2.92345 4.02572 2.95485 3.86799 3.01585 3.72084C3.07685 3.57369 3.16625 3.44001 3.27895 3.32744C3.39152 3.21474 3.52521 3.12533 3.67236 3.06433C3.81951 3.00333 3.97723 2.97194 4.13653 2.97194C4.29582 2.97194 4.45355 3.00333 4.6007 3.06433C4.74785 3.12533 4.88153 3.21474 4.9941 3.32744L5.03047 3.3638C5.1733 3.50352 5.35472 3.59725 5.55132 3.63289C5.74792 3.66854 5.9507 3.64448 6.1335 3.5638H6.18198C6.36124 3.48697 6.51411 3.35941 6.6218 3.19681C6.72948 3.03421 6.78726 2.84367 6.78804 2.64865V2.54562C6.78804 2.22414 6.91575 1.91584 7.14306 1.68852C7.37038 1.4612 7.67869 1.3335 8.00016 1.3335C8.32164 1.3335 8.62995 1.4612 8.85726 1.68852C9.08458 1.91584 9.21228 2.22414 9.21228 2.54562V2.60016C9.21306 2.79518 9.27085 2.98572 9.37853 3.14832C9.48621 3.31092 9.63909 3.43849 9.81835 3.51531C10.0011 3.59599 10.2039 3.62006 10.4005 3.58441C10.5971 3.54876 10.7785 3.45503 10.9214 3.31531L10.9577 3.27895C11.0703 3.16625 11.204 3.07685 11.3511 3.01585C11.4983 2.95485 11.656 2.92345 11.8153 2.92345C11.9746 2.92345 12.1323 2.95485 12.2795 3.01585C12.4266 3.07685 12.5603 3.16625 12.6729 3.27895C12.7856 3.39152 12.875 3.52521 12.936 3.67236C12.997 3.81951 13.0284 3.97723 13.0284 4.13653C13.0284 4.29582 12.997 4.45355 12.936 4.6007C12.875 4.74785 12.7856 4.88153 12.6729 4.9941L12.6365 5.03047C12.4968 5.1733 12.4031 5.35472 12.3674 5.55132C12.3318 5.74792 12.3559 5.9507 12.4365 6.1335V6.18198C12.5134 6.36124 12.6409 6.51411 12.8035 6.6218C12.9661 6.72948 13.1567 6.78726 13.3517 6.78804H13.4547C13.7762 6.78804 14.0845 6.91575 14.3118 7.14306C14.5391 7.37038 14.6668 7.67869 14.6668 8.00016C14.6668 8.32164 14.5391 8.62995 14.3118 8.85726C14.0845 9.08458 13.7762 9.21228 13.4547 9.21228H13.4002C13.2051 9.21306 13.0146 9.27085 12.852 9.37853C12.6894 9.48621 12.5618 9.63909 12.485 9.81835Z" stroke="#384250" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg></ListItemIcon>Settings</MenuItem>
            <MenuItem onClick={handleClose}>
              <ListItemIcon><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M6.06016 6.00016C6.2169 5.55461 6.52626 5.1789 6.93347 4.93958C7.34067 4.70027 7.81943 4.61279 8.28495 4.69264C8.75047 4.77249 9.17271 5.01451 9.47688 5.37585C9.78106 5.73718 9.94753 6.19451 9.94683 6.66683C9.94683 8.00016 7.94683 8.66683 7.94683 8.66683M8.00016 11.3335H8.00683M14.6668 8.00016C14.6668 11.6821 11.6821 14.6668 8.00016 14.6668C4.31826 14.6668 1.3335 11.6821 1.3335 8.00016C1.3335 4.31826 4.31826 1.3335 8.00016 1.3335C11.6821 1.3335 14.6668 4.31826 14.6668 8.00016Z" stroke="#384250" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg></ListItemIcon>
              Help</MenuItem>
            <Divider />
            <MenuItem onClick={handleClose}>
              <ListItemIcon><svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.66667 10.3333L13 7M13 7L9.66667 3.66667M13 7H5M5 1H4.2C3.0799 1 2.51984 1 2.09202 1.21799C1.7157 1.40973 1.40973 1.71569 1.21799 2.09202C1 2.51984 1 3.07989 1 4.2V9.8C1 10.9201 1 11.4802 1.21799 11.908C1.40973 12.2843 1.71569 12.5903 2.09202 12.782C2.51984 13 3.0799 13 4.2 13H5" stroke="#384250" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg></ListItemIcon>
Log out</MenuItem>
      </Menu>
          </React.Fragment>

  </div>
  </nav>
  );
}

const jobs = [
  { name: 'Frontend Developer', id: '1' },
  { name: 'Backend Developer', id: '2' },
  { name: 'Fullstack Developer', id: '3' },
  { name: 'QA Engineer', id: '4' },
  { name: 'Product Manager', id: '5' },
];